{"version":3,"file":"wc-headless-qr.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/headless-qr/src/constants.js","../../node_modules/headless-qr/src/qr.js","../../src/utils/config.js","../../src/utils/helper.js","../../src/webcomponent/headless-qr.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export const QRErrorCorrectionLevel = {\n\tL: 1,\n\tM: 0,\n\tQ: 3,\n\tH: 2\n};\n\nexport const QRMaskPattern = {\n\tPATTERN000: 0,\n\tPATTERN001: 1,\n\tPATTERN010: 2,\n\tPATTERN011: 3,\n\tPATTERN100: 4,\n\tPATTERN101: 5,\n\tPATTERN110: 6,\n\tPATTERN111: 7\n};\n","// Adapted from https://github.com/kazuhikoarase/qrcode-generator\n// License reproduced below\n\n//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nimport { QRErrorCorrectionLevel, QRMaskPattern } from './constants.js';\n\n/** @typedef {boolean | null} Module */\n\nconst encoder = new TextEncoder();\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\n/**\n * @param {string} input\n * @param {{\n *   version?: number;\n *   correction?: 'L' | 'M' | 'Q' | 'H';\n * }} opts\n */\nexport function qr(input, { version = -1, correction = 'M' } = {}) {\n\tconst error_correction_level = QRErrorCorrectionLevel[correction];\n\tconst data = encoder.encode(input);\n\n\tif (version < 1) {\n\t\tfor (version = 1; version < 40; version++) {\n\t\t\tconst rs_blocks = QRRSBlock.get_rs_blocks(\n\t\t\t\tversion,\n\t\t\t\terror_correction_level\n\t\t\t);\n\t\t\tconst buffer = new QrBitBuffer();\n\n\t\t\tbuffer.put(4, 4);\n\t\t\tbuffer.put(data.length, QRUtil.get_length_in_bits(version));\n\t\t\tbuffer.put_bytes(data);\n\n\t\t\tlet total_data_count = 0;\n\t\t\tfor (let i = 0; i < rs_blocks.length; i++) {\n\t\t\t\ttotal_data_count += rs_blocks[i].data_count;\n\t\t\t}\n\n\t\t\tif (buffer.get_length_in_bits() <= total_data_count * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst size = version * 4 + 17;\n\t/** @type {Module[][]} */\n\tconst modules = new Array(size);\n\tfor (let row = 0; row < size; row += 1) {\n\t\tmodules[row] = new Array(size);\n\t}\n\n\tlet min_lost_point = 0;\n\tlet best_pattern = 0;\n\n\t/** @type {number[]} */\n\tlet cache = create_data(version, error_correction_level, data);\n\n\tfor (let i = 0; i < 8; i += 1) {\n\t\tconst modules = make(true, i);\n\n\t\tconst lost_point = get_lost_point(modules);\n\n\t\tif (i == 0 || min_lost_point > lost_point) {\n\t\t\tmin_lost_point = lost_point;\n\t\t\tbest_pattern = i;\n\t\t}\n\t}\n\n\treturn make(false, best_pattern);\n\n\t/**\n\t * @param {boolean} test\n\t * @param {number} mask_pattern\n\t */\n\tfunction make(test, mask_pattern) {\n\t\tfor (let row = 0; row < size; row += 1) {\n\t\t\tfor (let col = 0; col < size; col += 1) {\n\t\t\t\tmodules[row][col] = null;\n\t\t\t}\n\t\t}\n\n\t\tsetup_position_probe_patter(modules, 0, 0);\n\t\tsetup_position_probe_patter(modules, size - 7, 0);\n\t\tsetup_position_probe_patter(modules, 0, size - 7);\n\t\tsetup_position_adjust_pattern(modules, version);\n\t\tsetup_timing_pattern(modules);\n\t\tsetup_type_info(modules, test, mask_pattern, error_correction_level);\n\n\t\tif (version >= 7) {\n\t\t\tsetup_version_number(modules, version, test);\n\t\t}\n\n\t\tmap_data(modules, cache, mask_pattern);\n\n\t\treturn modules;\n\t}\n}\n\n/**\n * @param {Module[][]} modules\n * @param {number} row\n * @param {number} col\n */\nfunction setup_position_probe_patter(modules, row, col) {\n\tfor (let r = -1; r <= 7; r += 1) {\n\t\tif (row + r <= -1 || modules.length <= row + r) continue;\n\n\t\tfor (let c = -1; c <= 7; c += 1) {\n\t\t\tif (col + c <= -1 || modules.length <= col + c) continue;\n\n\t\t\tif (\n\t\t\t\t(0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n\t\t\t\t(0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n\t\t\t\t(2 <= r && r <= 4 && 2 <= c && c <= 4)\n\t\t\t) {\n\t\t\t\tmodules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tmodules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Module[][]} modules\n * @param {number} version\n */\nfunction setup_position_adjust_pattern(modules, version) {\n\tconst pos = QRUtil.get_pattern_position(version);\n\n\tfor (let i = 0; i < pos.length; i += 1) {\n\t\tfor (let j = 0; j < pos.length; j += 1) {\n\t\t\tconst row = pos[i];\n\t\t\tconst col = pos[j];\n\n\t\t\tif (modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let r = -2; r <= 2; r += 1) {\n\t\t\t\tfor (let c = -2; c <= 2; c += 1) {\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n\t\t\t\t\t\tmodules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Module[][]} modules\n */\nfunction setup_timing_pattern(modules) {\n\tfor (let r = 8; r < modules.length - 8; r += 1) {\n\t\tif (modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tmodules[r][6] = r % 2 == 0;\n\t}\n\n\tfor (let c = 8; c < modules.length - 8; c += 1) {\n\t\tif (modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tmodules[6][c] = c % 2 == 0;\n\t}\n}\n\n/**\n * @param {Module[][]} modules\n * @param {boolean} test\n * @param {number} mask_pattern\n * @param {number} error_correction_level\n */\nfunction setup_type_info(modules, test, mask_pattern, error_correction_level) {\n\tconst data = (error_correction_level << 3) | mask_pattern;\n\tconst bits = QRUtil.get_bch_type_info(data);\n\n\t// vertical\n\tfor (let i = 0; i < 15; i += 1) {\n\t\tconst mod = !test && ((bits >> i) & 1) == 1;\n\n\t\tif (i < 6) {\n\t\t\tmodules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tmodules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tmodules[modules.length - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (let i = 0; i < 15; i += 1) {\n\t\tconst mod = !test && ((bits >> i) & 1) == 1;\n\n\t\tif (i < 8) {\n\t\t\tmodules[8][modules.length - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tmodules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tmodules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tmodules[modules.length - 8][8] = !test;\n}\n\n/**\n * @param {Module[][]} modules\n * @param {number} version\n * @param {boolean} test\n */\nfunction setup_version_number(modules, version, test) {\n\tconst bits = QRUtil.get_bch_type_number(version);\n\n\tfor (let i = 0; i < 18; i += 1) {\n\t\tconst mod = !test && ((bits >> i) & 1) == 1;\n\t\tmodules[Math.floor(i / 3)][(i % 3) + modules.length - 8 - 3] = mod;\n\t}\n\n\tfor (let i = 0; i < 18; i += 1) {\n\t\tconst mod = !test && ((bits >> i) & 1) == 1;\n\t\tmodules[(i % 3) + modules.length - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n}\n\n/**\n * @param {Module[][]} modules\n * @param {number[]} data\n * @param {number} mask_pattern\n */\nfunction map_data(modules, data, mask_pattern) {\n\tlet inc = -1;\n\tlet row = modules.length - 1;\n\tlet bit_index = 7;\n\tlet byte_index = 0;\n\tconst mask_func = QRUtil.get_mask_function(mask_pattern);\n\n\tfor (let col = modules.length - 1; col > 0; col -= 2) {\n\t\tif (col == 6) col -= 1;\n\n\t\twhile (true) {\n\t\t\tfor (let c = 0; c < 2; c += 1) {\n\t\t\t\tif (modules[row][col - c] == null) {\n\t\t\t\t\tlet dark = false;\n\n\t\t\t\t\tif (byte_index < data.length) {\n\t\t\t\t\t\tdark = ((data[byte_index] >>> bit_index) & 1) == 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mask = mask_func(row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodules[row][col - c] = dark;\n\t\t\t\t\tbit_index -= 1;\n\n\t\t\t\t\tif (bit_index == -1) {\n\t\t\t\t\t\tbyte_index += 1;\n\t\t\t\t\t\tbit_index = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || modules.length <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Module[][]} modules\n */\nfunction get_lost_point(modules) {\n\tconst size = modules.length;\n\tlet lost_point = 0;\n\n\t/**\n\t * @param {number} row\n\t * @param {number} col\n\t */\n\tconst is_dark = (row, col) => modules[row][col];\n\n\t// LEVEL1\n\tfor (let row = 0; row < size; row += 1) {\n\t\tfor (let col = 0; col < size; col += 1) {\n\t\t\tconst dark = is_dark(row, col);\n\t\t\tlet same_count = 0;\n\n\t\t\tfor (let r = -1; r <= 1; r += 1) {\n\t\t\t\tif (row + r < 0 || size <= row + r) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (let c = -1; c <= 1; c += 1) {\n\t\t\t\t\tif (col + c < 0 || size <= col + c) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (r == 0 && c == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dark == is_dark(row + r, col + c)) {\n\t\t\t\t\t\tsame_count += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (same_count > 5) {\n\t\t\t\tlost_point += 3 + same_count - 5;\n\t\t\t}\n\t\t}\n\t}\n\n\t// LEVEL2\n\tfor (let row = 0; row < size - 1; row += 1) {\n\t\tfor (let col = 0; col < size - 1; col += 1) {\n\t\t\tlet count = 0;\n\t\t\tif (is_dark(row, col)) count += 1;\n\t\t\tif (is_dark(row + 1, col)) count += 1;\n\t\t\tif (is_dark(row, col + 1)) count += 1;\n\t\t\tif (is_dark(row + 1, col + 1)) count += 1;\n\t\t\tif (count == 0 || count == 4) {\n\t\t\t\tlost_point += 3;\n\t\t\t}\n\t\t}\n\t}\n\n\t// LEVEL3\n\tfor (let row = 0; row < size; row += 1) {\n\t\tfor (let col = 0; col < size - 6; col += 1) {\n\t\t\tif (\n\t\t\t\tis_dark(row, col) &&\n\t\t\t\t!is_dark(row, col + 1) &&\n\t\t\t\tis_dark(row, col + 2) &&\n\t\t\t\tis_dark(row, col + 3) &&\n\t\t\t\tis_dark(row, col + 4) &&\n\t\t\t\t!is_dark(row, col + 5) &&\n\t\t\t\tis_dark(row, col + 6)\n\t\t\t) {\n\t\t\t\tlost_point += 40;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let col = 0; col < size; col += 1) {\n\t\tfor (let row = 0; row < size - 6; row += 1) {\n\t\t\tif (\n\t\t\t\tis_dark(row, col) &&\n\t\t\t\t!is_dark(row + 1, col) &&\n\t\t\t\tis_dark(row + 2, col) &&\n\t\t\t\tis_dark(row + 3, col) &&\n\t\t\t\tis_dark(row + 4, col) &&\n\t\t\t\t!is_dark(row + 5, col) &&\n\t\t\t\tis_dark(row + 6, col)\n\t\t\t) {\n\t\t\t\tlost_point += 40;\n\t\t\t}\n\t\t}\n\t}\n\n\t// LEVEL4\n\tlet dark_count = 0;\n\n\tfor (let col = 0; col < size; col += 1) {\n\t\tfor (let row = 0; row < size; row += 1) {\n\t\t\tif (is_dark(row, col)) {\n\t\t\t\tdark_count += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst ratio = Math.abs((100 * dark_count) / size / size - 50) / 5;\n\tlost_point += ratio * 10;\n\n\treturn lost_point;\n}\n\n/**\n * @param {QrBitBuffer} buffer\n * @param {Array<{ data_count: number, total_count: number }>} rs_blocks\n */\nfunction create_bytes(buffer, rs_blocks) {\n\tlet offset = 0;\n\n\tlet max_dc_count = 0;\n\tlet max_ec_count = 0;\n\n\t/** @type {number[][]} */\n\tconst dcdata = new Array(rs_blocks.length);\n\n\t/** @type {number[][]} */\n\tconst ecdata = new Array(rs_blocks.length);\n\n\tfor (let r = 0; r < rs_blocks.length; r += 1) {\n\t\tconst dc_count = rs_blocks[r].data_count;\n\t\tconst ec_count = rs_blocks[r].total_count - dc_count;\n\n\t\tmax_dc_count = Math.max(max_dc_count, dc_count);\n\t\tmax_ec_count = Math.max(max_ec_count, ec_count);\n\n\t\tdcdata[r] = new Array(dc_count);\n\n\t\tfor (let i = 0; i < dcdata[r].length; i += 1) {\n\t\t\tdcdata[r][i] = 0xff & buffer.get_buffer()[i + offset];\n\t\t}\n\t\toffset += dc_count;\n\n\t\tconst rs_poly = QRUtil.get_error_correct_polynominal(ec_count);\n\t\tconst raw_poly = new QrPolynomial(dcdata[r], rs_poly.get_length() - 1);\n\n\t\tconst mod_poly = raw_poly.mod(rs_poly);\n\t\tecdata[r] = new Array(rs_poly.get_length() - 1);\n\t\tfor (let i = 0; i < ecdata[r].length; i += 1) {\n\t\t\tconst mod_index = i + mod_poly.get_length() - ecdata[r].length;\n\t\t\tecdata[r][i] = mod_index >= 0 ? mod_poly.get_at(mod_index) : 0;\n\t\t}\n\t}\n\n\tlet total_code_count = 0;\n\tfor (let i = 0; i < rs_blocks.length; i += 1) {\n\t\ttotal_code_count += rs_blocks[i].total_count;\n\t}\n\n\t/** @type {number[]} */\n\tconst data = new Array(total_code_count);\n\tlet index = 0;\n\n\tfor (let i = 0; i < max_dc_count; i += 1) {\n\t\tfor (let r = 0; r < rs_blocks.length; r += 1) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index] = dcdata[r][i];\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let i = 0; i < max_ec_count; i += 1) {\n\t\tfor (let r = 0; r < rs_blocks.length; r += 1) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index] = ecdata[r][i];\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n}\n\n/**\n * @param {number} version\n * @param {number} error_correction_level\n * @param {Uint8Array} data\n */\nfunction create_data(version, error_correction_level, data) {\n\tconst rs_blocks = QRRSBlock.get_rs_blocks(version, error_correction_level);\n\n\tconst buffer = new QrBitBuffer();\n\n\tbuffer.put(4, 4);\n\tbuffer.put(data.length, QRUtil.get_length_in_bits(version));\n\tbuffer.put_bytes(data);\n\n\t// calc num max data.\n\tlet total_data_count = 0;\n\tfor (let i = 0; i < rs_blocks.length; i += 1) {\n\t\ttotal_data_count += rs_blocks[i].data_count;\n\t}\n\n\tif (buffer.get_length_in_bits() > total_data_count * 8) {\n\t\tthrow (\n\t\t\t'code length overflow. (' +\n\t\t\tbuffer.get_length_in_bits() +\n\t\t\t'>' +\n\t\t\ttotal_data_count * 8 +\n\t\t\t')'\n\t\t);\n\t}\n\n\t// end code\n\tif (buffer.get_length_in_bits() + 4 <= total_data_count * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.get_length_in_bits() % 8 != 0) {\n\t\tbuffer.put_bit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\tif (buffer.get_length_in_bits() >= total_data_count * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(PAD0, 8);\n\n\t\tif (buffer.get_length_in_bits() >= total_data_count * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(PAD1, 8);\n\t}\n\n\treturn create_bytes(buffer, rs_blocks);\n}\n\nconst QRUtil = (function () {\n\tconst PATTERN_POSITION_TABLE = [\n\t\t[],\n\t\t[6, 18],\n\t\t[6, 22],\n\t\t[6, 26],\n\t\t[6, 30],\n\t\t[6, 34],\n\t\t[6, 22, 38],\n\t\t[6, 24, 42],\n\t\t[6, 26, 46],\n\t\t[6, 28, 50],\n\t\t[6, 30, 54],\n\t\t[6, 32, 58],\n\t\t[6, 34, 62],\n\t\t[6, 26, 46, 66],\n\t\t[6, 26, 48, 70],\n\t\t[6, 26, 50, 74],\n\t\t[6, 30, 54, 78],\n\t\t[6, 30, 56, 82],\n\t\t[6, 30, 58, 86],\n\t\t[6, 34, 62, 90],\n\t\t[6, 28, 50, 72, 94],\n\t\t[6, 26, 50, 74, 98],\n\t\t[6, 30, 54, 78, 102],\n\t\t[6, 28, 54, 80, 106],\n\t\t[6, 32, 58, 84, 110],\n\t\t[6, 30, 58, 86, 114],\n\t\t[6, 34, 62, 90, 118],\n\t\t[6, 26, 50, 74, 98, 122],\n\t\t[6, 30, 54, 78, 102, 126],\n\t\t[6, 26, 52, 78, 104, 130],\n\t\t[6, 30, 56, 82, 108, 134],\n\t\t[6, 34, 60, 86, 112, 138],\n\t\t[6, 30, 58, 86, 114, 142],\n\t\t[6, 34, 62, 90, 118, 146],\n\t\t[6, 30, 54, 78, 102, 126, 150],\n\t\t[6, 24, 50, 76, 102, 128, 154],\n\t\t[6, 28, 54, 80, 106, 132, 158],\n\t\t[6, 32, 58, 84, 110, 136, 162],\n\t\t[6, 26, 54, 82, 110, 138, 166],\n\t\t[6, 30, 58, 86, 114, 142, 170]\n\t];\n\n\tconst G15 =\n\t\t(1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n\tconst G18 =\n\t\t(1 << 12) |\n\t\t(1 << 11) |\n\t\t(1 << 10) |\n\t\t(1 << 9) |\n\t\t(1 << 8) |\n\t\t(1 << 5) |\n\t\t(1 << 2) |\n\t\t(1 << 0);\n\tconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n\t/**\n\t * @param {number} data\n\t */\n\tfunction get_bch_digit(data) {\n\t\tlet digit = 0;\n\t\twhile (data != 0) {\n\t\t\tdigit += 1;\n\t\t\tdata >>>= 1;\n\t\t}\n\t\treturn digit;\n\t}\n\n\treturn {\n\t\t/**\n\t\t * @param {number} data\n\t\t */\n\t\tget_bch_type_info(data) {\n\t\t\tlet d = data << 10;\n\t\t\twhile (get_bch_digit(d) - get_bch_digit(G15) >= 0) {\n\t\t\t\td ^= G15 << (get_bch_digit(d) - get_bch_digit(G15));\n\t\t\t}\n\t\t\treturn ((data << 10) | d) ^ G15_MASK;\n\t\t},\n\n\t\t/**\n\t\t * @param {number} data\n\t\t */\n\t\tget_bch_type_number(data) {\n\t\t\tlet d = data << 12;\n\t\t\twhile (get_bch_digit(d) - get_bch_digit(G18) >= 0) {\n\t\t\t\td ^= G18 << (get_bch_digit(d) - get_bch_digit(G18));\n\t\t\t}\n\t\t\treturn (data << 12) | d;\n\t\t},\n\n\t\t/**\n\t\t * @param {number} version\n\t\t */\n\t\tget_pattern_position(version) {\n\t\t\treturn PATTERN_POSITION_TABLE[version - 1];\n\t\t},\n\n\t\t/**\n\t\t *\n\t\t * @param {number} mask_pattern\n\t\t * @returns {(i: number, j: number) => boolean}\n\t\t */\n\t\tget_mask_function(mask_pattern) {\n\t\t\tswitch (mask_pattern) {\n\t\t\t\tcase QRMaskPattern.PATTERN000:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn (i + j) % 2 == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN001:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn i % 2 == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN010:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn j % 3 == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN011:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn (i + j) % 3 == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN100:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN101:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn ((i * j) % 2) + ((i * j) % 3) == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN110:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;\n\t\t\t\t\t};\n\t\t\t\tcase QRMaskPattern.PATTERN111:\n\t\t\t\t\treturn function (i, j) {\n\t\t\t\t\t\treturn (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow 'bad mask_pattern:' + mask_pattern;\n\t\t\t}\n\t\t},\n\n\t\t/** @param {number} error_correct_length */\n\t\tget_error_correct_polynominal(error_correct_length) {\n\t\t\tlet a = new QrPolynomial([1], 0);\n\t\t\tfor (let i = 0; i < error_correct_length; i += 1) {\n\t\t\t\ta = a.multiply(new QrPolynomial([1, QRMath.gexp(i)], 0));\n\t\t\t}\n\t\t\treturn a;\n\t\t},\n\n\t\t/**\n\t\t * @param {number} type\n\t\t */\n\t\tget_length_in_bits(type) {\n\t\t\tif (1 <= type && type < 10) {\n\t\t\t\t// 1 - 9\n\t\t\t\treturn 8;\n\t\t\t} else if (type < 27) {\n\t\t\t\t// 10 - 26\n\t\t\t\treturn 16;\n\t\t\t} else if (type < 41) {\n\t\t\t\t// 27 - 40\n\t\t\t\treturn 16;\n\t\t\t} else {\n\t\t\t\tthrow 'type:' + type;\n\t\t\t}\n\t\t}\n\t};\n})();\n\nconst QRMath = (function () {\n\tconst EXP_TABLE = new Array(256);\n\tconst LOG_TABLE = new Array(256);\n\n\t// initialize tables\n\tfor (let i = 0; i < 8; i += 1) {\n\t\tEXP_TABLE[i] = 1 << i;\n\t}\n\tfor (let i = 8; i < 256; i += 1) {\n\t\tEXP_TABLE[i] =\n\t\t\tEXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n\t}\n\tfor (let i = 0; i < 255; i += 1) {\n\t\tLOG_TABLE[EXP_TABLE[i]] = i;\n\t}\n\n\treturn {\n\t\t/** @param {number} n */\n\t\tglog(n) {\n\t\t\tif (n < 1) {\n\t\t\t\tthrow 'glog(' + n + ')';\n\t\t\t}\n\n\t\t\treturn LOG_TABLE[n];\n\t\t},\n\n\t\t/** @param {number} n */\n\t\tgexp(n) {\n\t\t\twhile (n < 0) {\n\t\t\t\tn += 255;\n\t\t\t}\n\n\t\t\twhile (n >= 256) {\n\t\t\t\tn -= 255;\n\t\t\t}\n\n\t\t\treturn EXP_TABLE[n];\n\t\t}\n\t};\n})();\n\nclass QrPolynomial {\n\t#num;\n\n\t/**\n\t * @param {number[]} num\n\t * @param {number} shift\n\t */\n\tconstructor(num, shift) {\n\t\tif (typeof num.length == 'undefined') {\n\t\t\tthrow num.length + '/' + shift;\n\t\t}\n\n\t\tlet offset = 0;\n\t\twhile (offset < num.length && num[offset] == 0) {\n\t\t\toffset += 1;\n\t\t}\n\n\t\tthis.#num = new Array(num.length - offset + shift);\n\t\tfor (let i = 0; i < num.length - offset; i += 1) {\n\t\t\tthis.#num[i] = num[i + offset];\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} index\n\t */\n\tget_at(index) {\n\t\treturn this.#num[index];\n\t}\n\n\tget_length() {\n\t\treturn this.#num.length;\n\t}\n\n\t/**\n\t * @param {QrPolynomial} e\n\t */\n\tmultiply(e) {\n\t\tconst num = new Array(this.get_length() + e.get_length() - 1);\n\n\t\tfor (let i = 0; i < this.get_length(); i += 1) {\n\t\t\tfor (let j = 0; j < e.get_length(); j += 1) {\n\t\t\t\tnum[i + j] ^= QRMath.gexp(\n\t\t\t\t\tQRMath.glog(this.get_at(i)) + QRMath.glog(e.get_at(j))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn new QrPolynomial(num, 0);\n\t}\n\n\t/**\n\t * @param {QrPolynomial} e\n\t * @returns {QrPolynomial}\n\t */\n\tmod(e) {\n\t\tif (this.get_length() - e.get_length() < 0) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst ratio = QRMath.glog(this.get_at(0)) - QRMath.glog(e.get_at(0));\n\n\t\tconst num = new Array(this.get_length());\n\t\tfor (let i = 0; i < this.get_length(); i += 1) {\n\t\t\tnum[i] = this.get_at(i);\n\t\t}\n\n\t\tfor (let i = 0; i < e.get_length(); i += 1) {\n\t\t\tnum[i] ^= QRMath.gexp(QRMath.glog(e.get_at(i)) + ratio);\n\t\t}\n\n\t\t// recursive call\n\t\treturn new QrPolynomial(num, 0).mod(e);\n\t}\n}\n\nconst QRRSBlock = (function () {\n\tconst RS_BLOCK_TABLE = [\n\t\t// L\n\t\t// M\n\t\t// Q\n\t\t// H\n\n\t\t// 1\n\t\t[1, 26, 19],\n\t\t[1, 26, 16],\n\t\t[1, 26, 13],\n\t\t[1, 26, 9],\n\n\t\t// 2\n\t\t[1, 44, 34],\n\t\t[1, 44, 28],\n\t\t[1, 44, 22],\n\t\t[1, 44, 16],\n\n\t\t// 3\n\t\t[1, 70, 55],\n\t\t[1, 70, 44],\n\t\t[2, 35, 17],\n\t\t[2, 35, 13],\n\n\t\t// 4\n\t\t[1, 100, 80],\n\t\t[2, 50, 32],\n\t\t[2, 50, 24],\n\t\t[4, 25, 9],\n\n\t\t// 5\n\t\t[1, 134, 108],\n\t\t[2, 67, 43],\n\t\t[2, 33, 15, 2, 34, 16],\n\t\t[2, 33, 11, 2, 34, 12],\n\n\t\t// 6\n\t\t[2, 86, 68],\n\t\t[4, 43, 27],\n\t\t[4, 43, 19],\n\t\t[4, 43, 15],\n\n\t\t// 7\n\t\t[2, 98, 78],\n\t\t[4, 49, 31],\n\t\t[2, 32, 14, 4, 33, 15],\n\t\t[4, 39, 13, 1, 40, 14],\n\n\t\t// 8\n\t\t[2, 121, 97],\n\t\t[2, 60, 38, 2, 61, 39],\n\t\t[4, 40, 18, 2, 41, 19],\n\t\t[4, 40, 14, 2, 41, 15],\n\n\t\t// 9\n\t\t[2, 146, 116],\n\t\t[3, 58, 36, 2, 59, 37],\n\t\t[4, 36, 16, 4, 37, 17],\n\t\t[4, 36, 12, 4, 37, 13],\n\n\t\t// 10\n\t\t[2, 86, 68, 2, 87, 69],\n\t\t[4, 69, 43, 1, 70, 44],\n\t\t[6, 43, 19, 2, 44, 20],\n\t\t[6, 43, 15, 2, 44, 16],\n\n\t\t// 11\n\t\t[4, 101, 81],\n\t\t[1, 80, 50, 4, 81, 51],\n\t\t[4, 50, 22, 4, 51, 23],\n\t\t[3, 36, 12, 8, 37, 13],\n\n\t\t// 12\n\t\t[2, 116, 92, 2, 117, 93],\n\t\t[6, 58, 36, 2, 59, 37],\n\t\t[4, 46, 20, 6, 47, 21],\n\t\t[7, 42, 14, 4, 43, 15],\n\n\t\t// 13\n\t\t[4, 133, 107],\n\t\t[8, 59, 37, 1, 60, 38],\n\t\t[8, 44, 20, 4, 45, 21],\n\t\t[12, 33, 11, 4, 34, 12],\n\n\t\t// 14\n\t\t[3, 145, 115, 1, 146, 116],\n\t\t[4, 64, 40, 5, 65, 41],\n\t\t[11, 36, 16, 5, 37, 17],\n\t\t[11, 36, 12, 5, 37, 13],\n\n\t\t// 15\n\t\t[5, 109, 87, 1, 110, 88],\n\t\t[5, 65, 41, 5, 66, 42],\n\t\t[5, 54, 24, 7, 55, 25],\n\t\t[11, 36, 12, 7, 37, 13],\n\n\t\t// 16\n\t\t[5, 122, 98, 1, 123, 99],\n\t\t[7, 73, 45, 3, 74, 46],\n\t\t[15, 43, 19, 2, 44, 20],\n\t\t[3, 45, 15, 13, 46, 16],\n\n\t\t// 17\n\t\t[1, 135, 107, 5, 136, 108],\n\t\t[10, 74, 46, 1, 75, 47],\n\t\t[1, 50, 22, 15, 51, 23],\n\t\t[2, 42, 14, 17, 43, 15],\n\n\t\t// 18\n\t\t[5, 150, 120, 1, 151, 121],\n\t\t[9, 69, 43, 4, 70, 44],\n\t\t[17, 50, 22, 1, 51, 23],\n\t\t[2, 42, 14, 19, 43, 15],\n\n\t\t// 19\n\t\t[3, 141, 113, 4, 142, 114],\n\t\t[3, 70, 44, 11, 71, 45],\n\t\t[17, 47, 21, 4, 48, 22],\n\t\t[9, 39, 13, 16, 40, 14],\n\n\t\t// 20\n\t\t[3, 135, 107, 5, 136, 108],\n\t\t[3, 67, 41, 13, 68, 42],\n\t\t[15, 54, 24, 5, 55, 25],\n\t\t[15, 43, 15, 10, 44, 16],\n\n\t\t// 21\n\t\t[4, 144, 116, 4, 145, 117],\n\t\t[17, 68, 42],\n\t\t[17, 50, 22, 6, 51, 23],\n\t\t[19, 46, 16, 6, 47, 17],\n\n\t\t// 22\n\t\t[2, 139, 111, 7, 140, 112],\n\t\t[17, 74, 46],\n\t\t[7, 54, 24, 16, 55, 25],\n\t\t[34, 37, 13],\n\n\t\t// 23\n\t\t[4, 151, 121, 5, 152, 122],\n\t\t[4, 75, 47, 14, 76, 48],\n\t\t[11, 54, 24, 14, 55, 25],\n\t\t[16, 45, 15, 14, 46, 16],\n\n\t\t// 24\n\t\t[6, 147, 117, 4, 148, 118],\n\t\t[6, 73, 45, 14, 74, 46],\n\t\t[11, 54, 24, 16, 55, 25],\n\t\t[30, 46, 16, 2, 47, 17],\n\n\t\t// 25\n\t\t[8, 132, 106, 4, 133, 107],\n\t\t[8, 75, 47, 13, 76, 48],\n\t\t[7, 54, 24, 22, 55, 25],\n\t\t[22, 45, 15, 13, 46, 16],\n\n\t\t// 26\n\t\t[10, 142, 114, 2, 143, 115],\n\t\t[19, 74, 46, 4, 75, 47],\n\t\t[28, 50, 22, 6, 51, 23],\n\t\t[33, 46, 16, 4, 47, 17],\n\n\t\t// 27\n\t\t[8, 152, 122, 4, 153, 123],\n\t\t[22, 73, 45, 3, 74, 46],\n\t\t[8, 53, 23, 26, 54, 24],\n\t\t[12, 45, 15, 28, 46, 16],\n\n\t\t// 28\n\t\t[3, 147, 117, 10, 148, 118],\n\t\t[3, 73, 45, 23, 74, 46],\n\t\t[4, 54, 24, 31, 55, 25],\n\t\t[11, 45, 15, 31, 46, 16],\n\n\t\t// 29\n\t\t[7, 146, 116, 7, 147, 117],\n\t\t[21, 73, 45, 7, 74, 46],\n\t\t[1, 53, 23, 37, 54, 24],\n\t\t[19, 45, 15, 26, 46, 16],\n\n\t\t// 30\n\t\t[5, 145, 115, 10, 146, 116],\n\t\t[19, 75, 47, 10, 76, 48],\n\t\t[15, 54, 24, 25, 55, 25],\n\t\t[23, 45, 15, 25, 46, 16],\n\n\t\t// 31\n\t\t[13, 145, 115, 3, 146, 116],\n\t\t[2, 74, 46, 29, 75, 47],\n\t\t[42, 54, 24, 1, 55, 25],\n\t\t[23, 45, 15, 28, 46, 16],\n\n\t\t// 32\n\t\t[17, 145, 115],\n\t\t[10, 74, 46, 23, 75, 47],\n\t\t[10, 54, 24, 35, 55, 25],\n\t\t[19, 45, 15, 35, 46, 16],\n\n\t\t// 33\n\t\t[17, 145, 115, 1, 146, 116],\n\t\t[14, 74, 46, 21, 75, 47],\n\t\t[29, 54, 24, 19, 55, 25],\n\t\t[11, 45, 15, 46, 46, 16],\n\n\t\t// 34\n\t\t[13, 145, 115, 6, 146, 116],\n\t\t[14, 74, 46, 23, 75, 47],\n\t\t[44, 54, 24, 7, 55, 25],\n\t\t[59, 46, 16, 1, 47, 17],\n\n\t\t// 35\n\t\t[12, 151, 121, 7, 152, 122],\n\t\t[12, 75, 47, 26, 76, 48],\n\t\t[39, 54, 24, 14, 55, 25],\n\t\t[22, 45, 15, 41, 46, 16],\n\n\t\t// 36\n\t\t[6, 151, 121, 14, 152, 122],\n\t\t[6, 75, 47, 34, 76, 48],\n\t\t[46, 54, 24, 10, 55, 25],\n\t\t[2, 45, 15, 64, 46, 16],\n\n\t\t// 37\n\t\t[17, 152, 122, 4, 153, 123],\n\t\t[29, 74, 46, 14, 75, 47],\n\t\t[49, 54, 24, 10, 55, 25],\n\t\t[24, 45, 15, 46, 46, 16],\n\n\t\t// 38\n\t\t[4, 152, 122, 18, 153, 123],\n\t\t[13, 74, 46, 32, 75, 47],\n\t\t[48, 54, 24, 14, 55, 25],\n\t\t[42, 45, 15, 32, 46, 16],\n\n\t\t// 39\n\t\t[20, 147, 117, 4, 148, 118],\n\t\t[40, 75, 47, 7, 76, 48],\n\t\t[43, 54, 24, 22, 55, 25],\n\t\t[10, 45, 15, 67, 46, 16],\n\n\t\t// 40\n\t\t[19, 148, 118, 6, 149, 119],\n\t\t[18, 75, 47, 31, 76, 48],\n\t\t[34, 54, 24, 34, 55, 25],\n\t\t[20, 45, 15, 61, 46, 16]\n\t];\n\n\t/**\n\t * @param {number} version\n\t * @param {number} error_correction_level\n\t */\n\tfunction get_rs_block_table(version, error_correction_level) {\n\t\tswitch (error_correction_level) {\n\t\t\tcase QRErrorCorrectionLevel.L:\n\t\t\t\treturn RS_BLOCK_TABLE[(version - 1) * 4 + 0];\n\t\t\tcase QRErrorCorrectionLevel.M:\n\t\t\t\treturn RS_BLOCK_TABLE[(version - 1) * 4 + 1];\n\t\t\tcase QRErrorCorrectionLevel.Q:\n\t\t\t\treturn RS_BLOCK_TABLE[(version - 1) * 4 + 2];\n\t\t\tcase QRErrorCorrectionLevel.H:\n\t\t\t\treturn RS_BLOCK_TABLE[(version - 1) * 4 + 3];\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\treturn {\n\t\t/**\n\t\t * @param {number} version\n\t\t * @param {number} error_correction_level\n\t\t */\n\t\tget_rs_blocks(version, error_correction_level) {\n\t\t\tconst rs_block = get_rs_block_table(version, error_correction_level);\n\n\t\t\tif (typeof rs_block == 'undefined') {\n\t\t\t\tthrow (\n\t\t\t\t\t'bad rs block @ version:' +\n\t\t\t\t\tversion +\n\t\t\t\t\t'/error_correction_level:' +\n\t\t\t\t\terror_correction_level\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst length = rs_block.length / 3;\n\n\t\t\tconst list = [];\n\n\t\t\tfor (let i = 0; i < length; i += 1) {\n\t\t\t\tconst count = rs_block[i * 3 + 0];\n\t\t\t\tconst total_count = rs_block[i * 3 + 1];\n\t\t\t\tconst data_count = rs_block[i * 3 + 2];\n\n\t\t\t\tfor (let j = 0; j < count; j += 1) {\n\t\t\t\t\tlist.push({ total_count, data_count });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\t};\n})();\n\nclass QrBitBuffer {\n\t/** @type {number[]} */\n\t#buffer = [];\n\t#length = 0;\n\n\tget_buffer() {\n\t\treturn this.#buffer;\n\t}\n\n\t/**\n\t * @param {number} num\n\t * @param {number} length\n\t */\n\tput(num, length) {\n\t\tfor (let i = 0; i < length; i += 1) {\n\t\t\tthis.put_bit(((num >>> (length - i - 1)) & 1) == 1);\n\t\t}\n\t}\n\n\tget_length_in_bits() {\n\t\treturn this.#length;\n\t}\n\n\t/**\n\t * @param {boolean} bit\n\t */\n\tput_bit(bit) {\n\t\tconst buf_index = Math.floor(this.#length / 8);\n\t\tif (this.#buffer.length <= buf_index) {\n\t\t\tthis.#buffer.push(0);\n\t\t}\n\n\t\tif (bit) {\n\t\t\tthis.#buffer[buf_index] |= 0x80 >>> this.#length % 8;\n\t\t}\n\n\t\tthis.#length += 1;\n\t}\n\n\t/** @param {Uint8Array} bytes */\n\tput_bytes(bytes) {\n\t\tfor (let i = 0; i < bytes.length; i += 1) {\n\t\t\tthis.put(bytes[i], 8);\n\t\t}\n\t}\n}\n","export default {\n  size: \"250px\",\n  color: \"#000000\",\n  backgroundColor: \"#FFFFFF\",\n  output: \"svg\",\n  QR: {\n    version: 4,\n    correction: \"H\",\n  },\n};\n","export const pxConvert = (size, reverse = false) => {\n  if (!reverse) {\n    return size?.endsWith(\"px\") ? size : `${size}px`;\n  } else {\n    return size?.endsWith(\"px\") ? size.split(\"px\")[0] : size;\n  }\n};\n\n\nexport const generateSvg = (modules, size, color, backgroundColor) => {\n  // Calculate the cell size based on the number of modules in the QR code\n  const cellSize = (pxConvert(size, true) / modules.length).toFixed(5);\n  const viewBoxSize = modules.length; // Set the viewBox size to the number of modules\n  let svgStr = `<svg xmlns:ev=\"http://www.w3.org/2001/xml-events\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${viewBoxSize} ${viewBoxSize}\">`;\n\n  for (let row = 0; row < modules.length; row++) {\n    for (let col = 0; col < modules[row].length; col++) {\n      svgStr += `<rect x=\"${row}\" y=\"${col}\" width=\"1\" height=\"1\" fill=\"${\n        modules[row][col] ? color : backgroundColor\n      }\" stroke=\"${modules[row][col] ? color : backgroundColor}\"/>`;\n    }\n  }\n  svgStr += \"</svg>\";\n\n  return svgStr;\n};\n","<svelte:options tag=\"headless-qr\" />\n\n<script>\n  /** Dependencies */\n  import { qr } from \"headless-qr\";\n\n  /** Utils */\n  import Config from \"../utils/config\";\n  import { pxConvert, generateSvg } from \"../utils/helper\";\n\n  /** Props */\n  export let url;\n  export let color = Config.color;\n  export let background = Config.backgroundColor;\n  export let size = Config.size;\n  export let output = Config.output;\n  export let version = Config.QR.version;\n  export let correction = Config.QR.correction;\n\n  let modules;\n  let svg;\n  let cellSize;\n  let qrWidth;\n\n  // React to changes in url, version, or correction\n  $: {\n    modules = qr(url, { version, correction });\n    svg = generateSvg(modules, size, color, background);\n    qrWidth = modules ? modules.length : 0;  // actual number of cells\n    cellSize = size / qrWidth;\n  }\n</script>\n\n{#if output === \"html\"}\n  <div class=\"qr\" style={`width: ${pxConvert(size)}; height: ${pxConvert(size)}; --color: ${color}; grid-template-columns: repeat(${qrWidth}, ${pxConvert(cellSize)})`}>\n    {#each modules as row}\n      {#each row as col}\n        <div class=\"c {col ? 'f' : ''}\" style={`width: ${pxConvert(cellSize)}; height: ${pxConvert(cellSize)}`} />\n      {/each}\n    {/each}\n  </div>\n{:else}\n  {@html svg}\n{/if}\n\n<style lang=\"scss\">\n  @import \"../style/app.scss\";\n</style>\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","empty","data","createTextNode","attr","attribute","value","removeAttribute","getAttribute","setAttribute","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","createElementNS","nodeType","t","tagName","content","innerHTML","Array","from","childNodes","p","attribute_to_object","attributes","result","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","destroy_component","filtered","targets","indexOf","flush_render_callbacks","on_destroy","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","block","delete","local","customElement","new_on_destroy","map","filter","mount_component","SvelteElement","HTMLElement","super","attachShadow","mode","connectedCallback","key","slotted","appendChild","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","$on","type","index","splice","$set","$$props","obj","$$set","keys","QRErrorCorrectionLevel","L","M","Q","H","QRMaskPattern","encoder","TextEncoder","PAD0","PAD1","qr","input","version","correction","error_correction_level","encode","rs_blocks","QRRSBlock","get_rs_blocks","buffer","QrBitBuffer","put","QRUtil","get_length_in_bits","put_bytes","total_data_count","data_count","size","modules","row","min_lost_point","best_pattern","cache","put_bit","offset","max_dc_count","max_ec_count","dcdata","ecdata","r","dc_count","ec_count","total_count","Math","max","get_buffer","rs_poly","get_error_correct_polynominal","mod_poly","QrPolynomial","get_length","mod","mod_index","get_at","total_code_count","create_bytes","create_data","lost_point","get_lost_point","make","test","mask_pattern","col","setup_position_probe_patter","pos","get_pattern_position","j","setup_position_adjust_pattern","setup_timing_pattern","bits","get_bch_type_info","setup_type_info","get_bch_type_number","floor","setup_version_number","inc","bit_index","byte_index","mask_func","get_mask_function","dark","map_data","is_dark","same_count","count","dark_count","abs","PATTERN_POSITION_TABLE","G15","G18","get_bch_digit","digit","error_correct_length","multiply","QRMath","gexp","EXP_TABLE","LOG_TABLE","glog","num","shift","ratio","RS_BLOCK_TABLE","rs_block","get_rs_block_table","list","bit","buf_index","bytes","Config","color","backgroundColor","output","QR","pxConvert","reverse","endsWith","split","div","div_style_value","create_if_block","svg","cellSize","qrWidth","url","background","$$invalidate","toFixed","viewBoxSize","svgStr","generateSvg"],"mappings":"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"}